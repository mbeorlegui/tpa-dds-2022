@startuml TPA-1

class Organizacion {
  razonSocial : String
  tipo : Tipo
  ubicacion : Ubicacion
  sectores : List<Sector>
  clasificacion : Clasificacion
  void crearNuevoSector()
  bool esSectorDeLaOrganizacion(Sector)
}

class Ubicacion {
  latitud : double
  longitud : double
}

class Sector {
  miembros : List<Miembro>
  organizacion : Organizacion
}

class Miembro {
  nombre : String
  apellido : String
  nroDocumento : int
  tipoDocumento : Documento
  sectores : List<Sector>
  trayecto : Trayecto
}
' Ponemos lista de sectores en el Miembro
' y que cada sector conozca su organizacion,
' de forma tal que el miembro pueda acceder a su
' organizacion mediante el sector

enum Documento {
  DNI,
  LIBRETA,
}

enum Tipo {
  GUBERNAMENTAL,
  ONG,
  EMPRESA,
  INSTITUCION,
}

enum Clasificacion {
  MINISTERIO,
  UNIVERSIDAD,
  ESCUELA,
  EMPRESA_DEL_SECTOR_PRIMARIO,
  EMPRESA_DEL_SECTOR_SECUNDARIO,
}

' Usamos strategy para los medios de transportes
abstract class Transporte {
  tipoTransporte : TipoTransporte
}

enum TipoTransporte {
  PUBLICO,
  PARTICULAR,
  CONTRATADO,
  BICICLETA,
  PIE,
}

class VehiculoParticular {
  tipoDeVehiculo : TipoDeVehiculo
  combustible : Combustible
}

class TransportePublico {
  tipoDeTransportePublico : TipoDeTransportePublico
  paradas : List<Ubicacion>
  linea : String
  bool tieneUnaParadaEn(Ubicacion)
}

class ServicioContratado {
  tipoDeServicioContratado : TipoDeServicioContratado
}

' Se refiere a caminar o a bicicleta
class Pie {

}

class Bicicleta {

}


enum TipoDeTransportePublico {
  SUBTE,
  TREN,
  COLECTIVO,
}

enum TipoDeVehiculo {
  AUTO,
  MOTO,
  CAMIONETA,
}

enum TipoDeServicioContratado{
  TAXI,
  REMIS,
}

enum Combustible {
  GNC,
  NAFTA,
  ELECTRICO,
  GASOIL,
}

class Tramo {
  inicioDeTramo : Ubicacion
  finDeTramo : Ubicacion
  transporteUtilizado : Transporte
}

class Trayecto {
  tramos : List<Tramo>
}

class Administrador {
  user : String
  password : String
  validador : PasswordValidator 
}

class PasswordValidator {
  bool passwordEsComun(password)
  void validarPassword(password, user)
  fileReader : FileHandler
}

class FileHandler {
  void openFile()
  bool palabraEstaEnArchivo(unaPalabra)
}

Miembro "*"<-->"*" Sector
Organizacion -up-> Tipo
Organizacion -up-> Clasificacion
Organizacion --> Ubicacion
Organizacion "1"<-->"*" Sector
Miembro -up-> Documento

Trayecto --> "*" Tramo
Trayecto <-- Miembro
Tramo --> Transporte
Tramo -->"2" Ubicacion

Transporte -up-> TipoTransporte
TransportePublico -up->"*" Ubicacion
TransportePublico --> TipoDeTransportePublico
VehiculoParticular -down-> TipoDeVehiculo
VehiculoParticular -up-> Combustible
ServicioContratado -down-> TipoDeServicioContratado
TransportePublico -up-|> Transporte
VehiculoParticular -up-|> Transporte
Pie -up-|> Transporte
Bicicleta -up-|> Transporte
ServicioContratado -up-|> Transporte

Administrador -down->"1" PasswordValidator
PasswordValidator -down->"1" FileHandler


@enduml